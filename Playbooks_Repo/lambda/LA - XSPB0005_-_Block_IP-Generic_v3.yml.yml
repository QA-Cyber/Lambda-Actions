id: Block IP - Generic v3
name: Block IP - Generic v3
description: "This playbook blocks malicious IP addresses using all integrations that
  are enabled. The direction of the traffic that will be blocked is determined by
  the XSOAR user (and set by default to outgoing)\nNote the following:\n-  some of
  those integrations require specific parameters to run, which are based on the playbook
  inputs. Also, certain integrations use FW rules or appended network objects.\n-
  Note that the appended network objects should be specified in blocking rules inside
  the system later on. \n\n\nSupported integrations for this playbook [Network security
  products such as FW/WAF/IPs/etc.]: \n\n* Check Point Firewall\n* Palo Alto Networks
  PAN-OS\n* Zscaler\n* FortiGate\n* Aria Packet Intelligence\n* Cisco Firepower \n
  * Cisco Secure Cloud Analytics\n* Cisco ASA\n* Akamai WAF\n* F5 SilverLine\n* ThreatX\n
  * Signal Sciences WAF\n* Sophos Firewall."
trigger:
steps:
- id: b7fe6f18-9640-4161-87bd-c1ac609bf72d
  type: start
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: eec033f1-46ff-4c08-886b-5622e622aa85
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 034d4a0b-ba68-4b79-80b6-def530a3ef4a
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 3bfa1467-a97a-40e5-8795-aa2f8cd34a56
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: CheckPointFirewall_v2
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: e306cb07-b682-40af-8644-632cde5aa588
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: a711453b-2850-4493-8a69-a51cdaba5962
  type: condition
  description: Verify that there is at least one IP to block.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 44121d41-e492-4b08-8789-34ee4160adfa
    else_:
  - if_: ''
    then: 0f39089b-9326-4a78-8de3-ec670ec8683d
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 6d71d465-7c2e-43d8-8367-04945ca4c3c3
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Zscaler
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 9a4954bd-d057-437b-8d85-28c5a3ec7728
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 9a4954bd-d057-437b-8d85-28c5a3ec7728
  type: action
  description: Block the IPs using Zscaler.
  action:
  connector:
  inputs:
    ip:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
        - operator: join
          args:
            separator:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 3bd3ff6a-1dda-4a72-8f94-de4b25140a1b
  type: subplaybook
  description: "This playbook blocks IP addresses using Custom Block Rules in Palo
    Alto Networks Panorama or Firewall.\nThe playbook receives malicious IP addresses
    as inputs, creates a custom bi-directional rule to block them, and commits the
    configuration."
  action:
  connector:
  inputs:
    AutoCommit:
      complex:
        root: inputs.AutoCommit
    IP:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
    LogForwarding:
      complex:
        root: inputs.LogForwarding
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: db15c8b3-8d89-4217-89d1-50f93161fd5e
  type: subplaybook
  description: "This playbook blocks IP addresses using Static Address Groups in Palo
    Alto Networks Panorama or Firewall.\nThe playbook receives malicious IP addresses
    and an address group name as inputs, verifies that the addresses are not already
    a part of the address group, adds them and commits the configuration.\n\n***Note
    - The playbook does not block the address group communication using a policy block
    rule. This step will be taken once outside of the playbook."
  action:
  connector:
  inputs:
    AddressGroupName:
      complex:
        root: inputs.StaticAddressGroup
    AutoCommit:
      complex:
        root: inputs.AutoCommit
    IP:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 90146620-3c96-420d-8abb-c4e43df36c6c
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: bd4b2c1c-a1aa-4d90-87f0-2e11be406424
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: a7c00656-a5e1-4199-898d-adef07c33467
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 0e68ca31-6c08-4918-8ed2-6da4bd98c940
  type: subplaybook
  description: "This playbook utilizes the Dynamic Address Group (DAG) capability
    of PAN-OS.\nDAG enables analysts to create a rule one time, where the group is
    the source/destination, and adds IP addresses dynamically without the need to
    commit the configuration every time.\n\nThe playbook checks if the given tag already
    exists. If the tag exists, then the IP address is added to the tag.\n\nIf the
    tag does not exist, a new address group is created with the given tag and a matching
    rule, and the configuration is committed. \n"
  action:
  connector:
  inputs:
    action-type:
      simple: drop
    address_group_name:
      complex:
        root: inputs.DAGName
    auto_commit:
      complex:
        root: inputs.AutoCommit
    inbound-or-outbound-rule:
      complex:
        root: inputs.RuleDirection
    ip_list:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
    pre-post-rulebase:
      simple: pre-rulebase
    rule-position:
      simple: top
    tag_name:
      complex:
        root: inputs.DAG
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 1cee05c9-29eb-4552-8833-d3670680620c
  type: condition
  description: Verify if custom block rule playbook input is set to true.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 3bd3ff6a-1dda-4a72-8f94-de4b25140a1b
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: b141c107-3022-489f-8635-6907ad4240ee
  type: condition
  description: Verify if there is a static address group name set as a playbook input.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: db15c8b3-8d89-4217-89d1-50f93161fd5e
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 9eed4e5a-b732-4394-8264-05f071e51aeb
  type: condition
  description: Verify if there is a tag to mark IPs for an EDL/EIS query.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: e0a5eadb-97eb-4117-8771-4ec381dd65dc
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: f9198f7e-933d-4c93-82c5-d516fdd9ef0c
  type: condition
  description: Verify if there is a dynamic address group name set as a playbook input.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 0e68ca31-6c08-4918-8ed2-6da4bd98c940
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: db18a7c0-26ec-4316-8730-c19da3847291
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 380e319e-a726-4445-84c7-b8c667f073d0
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: FortiGate
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: a330da1e-f166-48cd-8eaa-06177aee8efe
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: a330da1e-f166-48cd-8eaa-06177aee8efe
  type: action
  description: Adds IP addresses to the banned list.
  action:
  connector:
  inputs:
    ip_address:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
        - operator: join
          args:
            separator:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: e306cb07-b682-40af-8644-632cde5aa588
  type: subplaybook
  description: "This playbook blocks IP addresses using Custom Block Rules in Checkpoint
    Firewall.\nThe playbook receives malicious IP addresses as inputs, creates a custom
    bi-directional rule to block them, and publishes the configuration."
  action:
  connector:
  inputs:
    IP:
      simple: ${BlockList.Final}
    block_IP_error_handling:
      simple: Stop
    checkpoint_error_handling:
      simple: Stop
    install_policy:
      complex:
        root: inputs.AutoCommit
        transformers:
        - operator: If-Then-Else
          args:
            condition: {}
            else:
              value:
                simple: 'False'
            equals:
              value:
                simple: Yes
            lhs: {}
            options: {}
            rhs: {}
            then:
              value:
                simple: 'True'
    policy_package:
      simple: Standard
    rule_layer:
      simple: Network
    rule_name:
      simple: ${inputs.RuleName}
    rule_position:
      simple: top
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 4a69e369-2577-45fb-83dd-75125547a4ab
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 80d38ccf-d4ba-41c4-8ebd-26a30da58266
  type: action
  description: Adds a new particular threatening IP address object by its IP address.
  action:
  connector:
  inputs:
    cidr_range:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
    list_type:
      simple: denylist
    note:
      simple: ${inputs.RuleName}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: df579a8d-7184-4b88-8beb-352e000cd072
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: F5Silverline
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 80d38ccf-d4ba-41c4-8ebd-26a30da58266
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: ca84bd8d-a8f0-4627-8afe-61e0e70ff4d5
  type: condition
  description: Check if there are any IPs mentioned in the inputs section.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: a711453b-2850-4493-8a69-a51cdaba5962
    else_:
  - if_: ''
    then: 6cf23df7-5f64-445d-845d-3883866f7d46
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 1c174167-6aa9-48c5-8c77-7b6ddfa3527a
  type: condition
  description: Check if there are any malicious IPs from the input IPs.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: a711453b-2850-4493-8a69-a51cdaba5962
    else_:
  - if_: ''
    then: 31af9dac-9fc4-477e-87b4-19fe4da82447
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 31af9dac-9fc4-477e-87b4-19fe4da82447
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Malicious
    value:
      complex:
        root: IP
        filters:
        - - operator: isExists
            left:
              value:
                simple: IP.Malicious
              iscontext: true
        - - operator: inList
            left:
              value:
                simple: IP.Address
              iscontext: true
            right:
              value:
                simple: inputs.IP
              iscontext: true
            ignorecase: true
        accessor: Address
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 0f39089b-9326-4a78-8de3-ec670ec8683d
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: d3e2ec0f-17f8-4905-8a2e-cffb29513a53
  type: condition
  description: Check if user verification is needed. Otherwise, proceed without asking
    questions.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 83e1b556-8a3a-4ff5-8742-1287ff9f8240
    else_:
  - if_: ''
    then: fec9b088-6d31-4eda-8b5f-3296bd257767
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 4e143a2c-ef50-41f1-807d-088c46e5a538
  type: action
  description: "Ask the user what IPs should be blocked.\nNote that in this task the
    following IPs are in your internal range:\n${BlockList.PIIP}\n\nRemember that
    the direction you have decided is - ${inputs.RuleDirection}"
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 41d0d39e-008f-438e-82c2-b5af7781eabf
  type: condition
  description: Check if any suspicious IPs were found during the IP enrichment process.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: a711453b-2850-4493-8a69-a51cdaba5962
    else_:
  - if_: ''
    then: 24d37c7e-dfc9-4075-8caf-fac89448f74f
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 24d37c7e-dfc9-4075-8caf-fac89448f74f
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Suspicious
    stringify:
      simple: 'false'
    value:
      complex:
        root: DBotScore
        filters:
        - - operator: isEqualString
            left:
              value:
                simple: DBotScore.Score
              iscontext: true
            right:
              value:
                simple: '2'
        - - operator: match
            left:
              value:
                simple: DBotScore.Indicator
              iscontext: true
            right:
              value:
                simple: 
                  (\b25[0-5]|\b2[0-4][0-9]|\b[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}
        - - operator: inList
            left:
              value:
                simple: DBotScore.Indicator
              iscontext: true
            right:
              value:
                simple: inputs.IP
              iscontext: true
        accessor: Indicator
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 1dd62435-07b9-4e9a-86db-7a900c3dbd4e
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: d7d90e83-062b-4455-889d-7289d1a70a19
  type: action
  description: commands.local.cmd.enrich.indicators
  action:
  connector:
  inputs:
    indicatorsValues:
      complex:
        root: IP
        filters:
        - - operator: isEqualString
            left:
              value:
                simple: IP.InRange
              iscontext: true
            right:
              value:
                simple: No
            ignorecase: true
        - - operator: inList
            left:
              value:
                simple: IP.Address
              iscontext: true
            right:
              value:
                simple: inputs.IP
              iscontext: true
        accessor: Address
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: b56affc3-dc5f-4463-8599-d308363152bf
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: c8b3752a-ee90-47fb-888f-f8e9dbc3f15f
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Cisco ASA
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 09577124-dd9f-40db-8c88-5b872a06e38d
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 09577124-dd9f-40db-8c88-5b872a06e38d
  type: action
  description: Creates a rule.
  action:
  connector:
  inputs:
    active:
      complex:
        root: inputs.AutoCommit
        transformers:
        - operator: If-Then-Else
          args:
            condition: {}
            else:
              value:
                simple: 'False'
            equals:
              value:
                simple: Yes
            lhs: {}
            options: {}
            rhs: {}
            then:
              value:
                simple: Ture
    destination:
      complex:
        root: inputs.RuleDirection
        transformers:
        - operator: If-Then-Else
          args:
            condition: {}
            else:
              value:
                simple: 0.0.0.0
            equals:
              value:
                simple: outbound
            lhs: {}
            options: {}
            rhs: {}
            then:
              value:
                simple: ${BlockList.Final}
              iscontext: true
    interface_type:
      simple: Global
    log_level:
      simple: Default
    permit:
      simple: 'False'
    position:
      simple: top
    source:
      complex:
        root: inputs.RuleDirection
        transformers:
        - operator: If-Then-Else
          args:
            condition: {}
            else:
              value:
                simple: ${BlockList.Final}
              iscontext: true
            equals:
              value:
                simple: outbound
            lhs: {}
            options: {}
            rhs: {}
            then:
              value:
                simple: 0.0.0.0
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 8f019569-55db-4d45-8642-52e45dba3c2d
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Stealthwatch Cloud
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 6099cfca-ecd9-4dfc-8720-c806a21e43b6
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 6099cfca-ecd9-4dfc-8720-c806a21e43b6
  type: action
  description: Add a domain or IP to the block list.
  action:
  connector:
  inputs:
    ip:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: bd27b51c-e1cd-4371-8dfc-2d6d49c6c08c
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: ff341c4e-cd9b-4516-8d8a-b6f2f97b30c4
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Cisco Firepower
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 3b230eb6-3a09-41ec-82db-81daa78dee97
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 9dac0912-fb55-4a3b-8d68-ebd2cdde784f
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 7605a78c-deb2-4a39-8a51-e42950bf736c
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: fdd8bddf-f40f-4e35-8bb4-ef79df9f4d8a
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Akamai WAF
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: b9da42f6-1e62-4ac7-8e2b-01c458855259
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: b9da42f6-1e62-4ac7-8e2b-01c458855259
  type: action
  description: Adds elements to the specified network list.
  action:
  connector:
  inputs:
    elements:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
    network_list_id:
      simple: ${inputs.AkamaiNetworkListID}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 9688c755-ae0b-4dfa-8751-c927f6d7ae38
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: cffe6cff-03f5-43cc-89e9-c6b083ae4b53
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: ThreatX
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 88e12722-0ed7-4636-8563-5a72a90c6d38
    else_:
  - if_: ''
    then: d0f50f49-291b-40da-8bdf-55c5cdd01df3
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 88e12722-0ed7-4636-8563-5a72a90c6d38
  type: action
  description: Temporarily blocks an IP address or CIDR. Default is 30 minutes.
  action:
  connector:
  inputs:
    description:
      simple: ${inputs.RuleName}
    ip:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 53ea2c9b-dacb-456e-8c02-683e777bae76
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: e18ed541-babe-4ecf-85f9-d021aa99a0a9
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Signal Sciences WAF
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 43a85eb5-0e87-4616-8dd2-9644a1c94ed0
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 43a85eb5-0e87-4616-8dd2-9644a1c94ed0
  type: action
  description: Adding IPs to the Signal Sciences WAF integration.
  action:
  connector:
  inputs:
    ip:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
    note:
      simple: ${inputs.RuleName}
    siteName:
      simple: ${inputs.SiteName}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: f0ec8621-f223-46dc-8a04-856aa31e77fd
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 5a301c99-a5dc-4e0d-8741-01434711d074
  type: action
  description: Adds a rule that blocks packets destined for a specific IP address
    or range of IP addresses.
  action:
  connector:
  inputs:
    rule_name:
      simple: ${inputs.RuleName}
    target_ip:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 5ad1fa64-7966-44dd-8fb2-656e205dc05d
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: sophos_firewall
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: f0ffc0b9-feef-4892-859c-a00b778cd8fe
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: fab5e2cc-1d68-4bd7-867b-032814323d1a
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: ARIA Packet Intelligence
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 5a301c99-a5dc-4e0d-8741-01434711d074
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 6e1e1f40-7e8e-422e-8910-c06271450ad8
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 6cf23df7-5f64-445d-845d-3883866f7d46
  type: action
  description: Returns 'yes' if the IP is in one of the ranges provided. Otherwise
    returns 'no'
  action: IsIPInRanges
  connector:
  inputs:
    ip:
      complex:
        root: inputs.IP
        transformers:
        - operator: split
          args:
            delimiter:
              value:
                simple: ','
    ipRanges:
      complex:
        root: inputs.InternalRange
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 744d29e9-f193-478d-8b22-115311053966
  type: action
  description: Add the IPs from the input.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Input
    stringify:
      simple: 'false'
    value:
      complex:
        root: inputs.IP
        transformers:
        - operator: split
          args:
            delimiter:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 83e1b556-8a3a-4ff5-8742-1287ff9f8240
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Final
    value:
      simple: ${BlockList.Input}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 3b230eb6-3a09-41ec-82db-81daa78dee97
  type: subplaybook
  description: This playbook will append a network group object with new elements
    (IPs or network objects).
  action:
  connector:
  inputs:
    IP:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
    Override:
      simple: 'False'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: e8095de9-3bd5-4f8c-8ccb-02d76b87d1a1
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Final
    value:
      complex:
        root: Please answer the following.Answers
        accessor: '2'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 397b5fa6-e8b1-43a0-89d1-b6f63514e8d1
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Final
    value:
      complex:
        root: Please answer the following.Answers
        accessor: '0'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: c0352087-e558-45f5-8400-6fec3e641441
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Final
    value:
      complex:
        root: Please answer the following.Answers
        accessor: '1'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: d0f50f49-291b-40da-8bdf-55c5cdd01df3
  type: action
  description: Adds an IP address or CIDR to the block list.
  action:
  connector:
  inputs:
    description:
      simple: ${inputs.RuleName}
    ip:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: f0ffc0b9-feef-4892-859c-a00b778cd8fe
  type: subplaybook
  description: "This playbook adds the IP address to a pre-configured firewall rule.
    (The target firewall rule can be changed as requested.)\nPre-Requisite:\n1) Create
    an IP host group.\n2) Create a firewall rule which refers to the IP host group
    created in the previous step."
  action:
  connector:
  inputs:
    IP:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: fec9b088-6d31-4eda-8b5f-3296bd257767
  type: condition
  description: Check if there are any internal IPs in the block requested IPs.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 342e2d51-0427-4bc1-85dd-e53b274549f7
    else_:
  - if_: ''
    then: 4e143a2c-ef50-41f1-807d-088c46e5a538
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 44121d41-e492-4b08-8789-34ee4160adfa
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 342e2d51-0427-4bc1-85dd-e53b274549f7
  type: action
  description: "Ask the user what IPs should be blocked.\n\nRemember that the direction
    you have decided is - ${inputs.RuleDirection}"
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 68b6a610-d4dc-4293-8bf6-015902b9e3dc
  type: condition
  description: Check if the user requests an IPs enrichment for determining if those
    are malicious or suspicious.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: b28e5315-84f0-4d42-8595-8d01a5214345
    else_:
  - if_: ''
    then: d7d90e83-062b-4455-889d-7289d1a70a19
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: b28e5315-84f0-4d42-8595-8d01a5214345
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.PIIP
    value:
      complex:
        root: IP
        filters:
        - - operator: isEqualString
            left:
              value:
                simple: IP.InRange
              iscontext: true
            right:
              value:
                simple: Yes
            ignorecase: true
        - - operator: inList
            left:
              value:
                simple: IP.Address
              iscontext: true
            right:
              value:
                simple: inputs.IP
              iscontext: true
            ignorecase: true
        accessor: Address
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: d8d772aa-064f-4701-8c08-710f49819fb7
  type: action
  description: Set a value in context under the key you entered. If no value is entered,
    the script does nothing.
  action: SetAndHandleEmpty
  connector:
  inputs:
    append:
      simple: 'true'
    key:
      simple: BlockList.Final
    value:
      complex:
        root: Please answer the following.Answers
        accessor: '3'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: e0a5eadb-97eb-4117-8771-4ec381dd65dc
  type: action
  description: commands.local.cmd.add.values.to.indicator.multi.select.field
  action:
  connector:
  inputs:
    indicatorsValues:
      complex:
        root: BlockList
        accessor: Final
        transformers:
        - operator: join
          args:
            separator:
              value:
                simple: ','
    field:
      simple: tags
    fieldValue:
      complex:
        root: inputs.Tag
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 4f0503b7-bba7-45d9-8e73-3809af7e5d48
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: a966d240-87e4-4d68-8650-7ef30f74a490
  type: action
  description: Create System indicators
  action:
  connector:
  inputs:
    type:
      simple: IP
    value:
      complex:
        root: inputs.IP
        transformers:
        - operator: split
          args:
            delimiter:
              value:
                simple: ','
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: c4cee8d1-81c7-4c4e-8465-0b913bce5337
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 281f9d65-c396-4441-86f2-340da163d601
  type: subplaybook
  description: "This playbook assists in blocking communication with the provided
    IPs in the Prisma SASE policy.\nIf a group name is provided, the IPs will be added
    to the mentioned static address group (there should be a rule associated with
    the group name to block communication with that group).\nAnd if the group name
    is not provided, a new group will be created with a dedicated rule to block communication
    with those IPs."
  action:
  connector:
  inputs:
    AutoCommit:
      complex:
        root: inputs.AutoCommit
    Folder:
      complex:
        root: inputs.Folder
        transformers:
        - operator: uniq
    IP:
      complex:
        accessor: Final
        root: BlockList
        transformers:
        - operator: uniq
    StaticAddressGroupName:
      complex:
        root: inputs.StaticAddressGroup
        transformers:
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 4d7717be-2f2d-4962-8b96-18edd3a0977c
  type: condition
  description: Returns 'yes' if integration brand is available. Otherwise returns
    'no'
  action: IsIntegrationAvailable
  connector:
  inputs:
    brandname:
      simple: Palo Alto Networks - Prisma SASE
  outputs:
  conditions:
  - if_: ''
    then: eec033f1-46ff-4c08-886b-5622e622aa85
    else_:
  - if_: ''
    then: 281f9d65-c396-4441-86f2-340da163d601
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
inputs:
outputs:
metadata:
  vendor_mappings: {}
