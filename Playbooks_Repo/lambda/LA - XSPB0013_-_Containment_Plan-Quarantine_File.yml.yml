id: Containment Plan - Quarantine File
name: Containment Plan - Quarantine File
description: "## Containment Plan - Quarantine File\n\nThis playbook is a sub-playbook
  within the containment plan playbook.\nThe playbook quarantines files using core
  commands."
trigger:
steps:
- id: 0c4f76b8-840e-49d6-83ea-28853fed1128
  type: start
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 397f4b57-3b4f-40ed-8871-59fb281d5a77
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: a0ceb1ef-9c66-4295-8ab8-8ff9b8cbbf2f
  type: action
  description: Retrieves the quarantine status for a selected file.
  action:
  connector:
  inputs:
    endpoint_id:
      complex:
        root: inputs.EndpointID
    file_hash:
      complex:
        root: foundIncidents.CustomFields
        accessor: initiatorsha256
        transformers:
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: inputs.FileHash
              iscontext: true
    file_path:
      complex:
        root: foundIncidents.CustomFields
        accessor: initiatorpath
        transformers:
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: inputs.FilePath
              iscontext: true
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 30398ddb-5182-4c19-84f2-6f06e62eabca
  type: action
  description: Quarantines a file on selected endpoints. You can select up to 1000
    endpoints.
  action:
  connector:
  inputs:
    endpoint_id_list:
      complex:
        root: inputs.EndpointID
    file_hash:
      complex:
        root: foundIncidents.CustomFields
        filters:
        - - operator: isNotEqualString
            left:
              value:
                simple: foundIncidents.CustomFields.initiatorpath
              iscontext: true
            right:
              value:
                simple: c:\windows\explorer.exe
            ignorecase: true
        accessor: initiatorsha256
        transformers:
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: inputs.FileHash
              iscontext: true
    file_path:
      complex:
        root: foundIncidents.CustomFields.initiatorpath
        filters:
        - - operator: isNotEqualString
            left:
              value:
                simple: foundIncidents.CustomFields.initiatorpath
              iscontext: true
            right:
              value:
                simple: c:\windows\explorer.exe
            ignorecase: true
        transformers:
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: inputs.FilePath
              iscontext: true
    interval_in_seconds:
      simple: '20'
    timeout_in_seconds:
      simple: '120'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 2b43ad1d-1312-47cd-87af-a0e39b15ab76
  type: action
  description: commands.local.cmd.set.parent.incident.context
  action:
  connector:
  inputs:
    key:
      simple: QuarantinedFilesFromEndpoints
    value:
      complex:
        root: Core.quarantineFiles
        accessor: actionIds
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 1208d3af-a6d7-4126-86f2-1c84f8659895
  type: condition
  description: Whether to quarantine the files based on the input values and the incident
    context.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 3480aab3-067b-4479-839e-72f46bc551b1
    else_:
  - if_: ''
    then: 30398ddb-5182-4c19-84f2-6f06e62eabca
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 410c04ef-0afc-4578-8b1b-b1a3de96debf
  type: condition
  description: Checks if the quarantining of the file was successful.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 942487c5-0c60-4be2-aa56-4c85d6718a0f
    else_:
  - if_: ''
    then: 7e2c6273-86db-4fdd-8165-79a451736b14
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 7e2c6273-86db-4fdd-8165-79a451736b14
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    key:
      simple: QuarantinedFilesFromEndpoints
    value:
      complex:
        root: Core.quarantineFiles
        accessor: actionIds
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: fd83526a-3995-475b-8ea6-60233a3f1636
  type: condition
  description: Whether to isolate the device automatically based on the input values.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 397f4b57-3b4f-40ed-8871-59fb281d5a77
    else_:
  - if_: ''
    then: a0ceb1ef-9c66-4295-8ab8-8ff9b8cbbf2f
    else_:
  - if_: ''
    then: c4b074c0-d8a1-4ef8-80a4-0b3ba35a3e76
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 8395bf84-b9be-42af-8c0b-cdf64c82b8fa
  type: action
  description: Retrieves the quarantine status for a selected file.
  action:
  connector:
  inputs:
    endpoint_id:
      complex:
        root: inputs.EndpointID
    file_hash:
      complex:
        root: FileHash
        filters:
        - - operator: stringHasLength
            left:
              value:
                simple: FileHash
              iscontext: true
            right:
              value:
                simple: '64'
    file_path:
      complex:
        root: FilePath
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: a04c8ae8-b9a2-4a06-8d64-8463dd6582d9
  type: condition
  description: Whether to quarantine the files based on the input values and the incident
    context.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 397f4b57-3b4f-40ed-8871-59fb281d5a77
    else_:
  - if_: ''
    then: 48f240fd-334d-4f88-8e66-726f9971ba3c
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 48f240fd-334d-4f88-8e66-726f9971ba3c
  type: action
  description: Quarantines a file on selected endpoints. You can select up to 1000
    endpoints.
  action:
  connector:
  inputs:
    endpoint_id_list:
      complex:
        root: inputs.EndpointID
    file_hash:
      complex:
        root: FileHash
        filters:
        - - operator: stringHasLength
            left:
              value:
                simple: FileHash
              iscontext: true
            right:
              value:
                simple: '64'
    file_path:
      complex:
        root: FilePath
    interval_in_seconds:
      simple: '20'
    timeout_in_seconds:
      simple: '120'
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: c4b074c0-d8a1-4ef8-80a4-0b3ba35a3e76
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    key:
      simple: FilePath
    value:
      complex:
        root: inputs.FilePath
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: Path\":\"(.+?)\"
            unpack_matches: {}
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: No value
        - operator: replace
          args:
            limit: {}
            replaceWith:
              value:
                simple: \
            toReplace:
              value:
                simple: \\
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: e0e42cd2-c5a4-4148-855a-3f99dc7a6c91
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    key:
      simple: FileHash
    value:
      complex:
        root: inputs.FileHash
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: Hash\":\"(.+?)\"
            unpack_matches: {}
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: No value
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 942487c5-0c60-4be2-aa56-4c85d6718a0f
  type: action
  description: "Dear Analyst,\n\nThe playbook was unable to quarantine the file due
    to the following possible reasons:\n\n- The file is not located on the local host.\n
    - The endpoint is currently disconnected.\n\nPlease take manual action to quarantine
    the file."
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 3480aab3-067b-4479-839e-72f46bc551b1
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
inputs:
outputs:
metadata:
  vendor_mappings: {}
