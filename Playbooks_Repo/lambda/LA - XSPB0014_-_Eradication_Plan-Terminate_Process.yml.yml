id: Eradication Plan - Terminate Process
name: Eradication Plan - Terminate Process
description: "This playbook is one of the sub-playbooks in the eradication plan. \n
  This playbook handles the termination of the processes as a crucial step in the
  eradication action.\nThe playbook executes actions of process termination, which
  is a crucial step in the eradication process.\nThe process termination can be performed
  based on either the process ID or the process name."
trigger:
steps:
- id: 0c2bd2d8-2747-473f-873c-fdf0258c1425
  type: start
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 387a0de2-f9a3-412a-8531-299ba47ac010
  type: condition
  description: Whether to terminate the process automatically, manually, or not at
    all.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: b6c458a7-8533-4692-87af-498de4ea894f
    else_:
  - if_: ''
    then: 77d2329d-39ac-4e97-8490-b759589f91ad
    else_:
  - if_: ''
    then: e5475bb4-564f-4364-892b-12b130016b7a
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: b6c458a7-8533-4692-87af-498de4ea894f
  type: title
  description: ''
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: d1bf1eb3-8962-4fe0-8f37-dd1d6e67fc1d
  type: action
  description: Retrieve the results of a script execution action.
  action:
  connector:
  inputs:
    action_id:
      complex:
        root: Core.GetActionStatus
        accessor: action_id
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: f3850073-38b9-4991-8e2e-ac78bd2372e6
  type: action
  description: Initiates a new endpoint script execution kill process.
  action:
  connector:
  inputs:
    endpoint_ids:
      complex:
        root: inputs.EndpointID
    process_name:
      complex:
        root: FilePath
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: '[^\\]+$'
            unpack_matches: {}
        - operator: uniq
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 5bb3ab00-26df-4e11-89b2-a213d1eba8aa
  type: condition
  description: Checks if the process was terminated.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: 4e7794f3-70a6-4941-8e9e-65ef20777dca
    else_:
  - if_: ''
    then: 960374b2-8b4a-4577-8bf1-ac02f9ceccf4
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 960374b2-8b4a-4577-8bf1-ac02f9ceccf4
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    extend-context:
      simple: TerminatedProcessFromEndpoints=
    ignore-outputs:
      simple: 'true'
    key:
      complex:
        root: inputs.EndpointID
    value:
      complex:
        root: Core.ScriptResult.results
        filters:
        - - operator: isEqualString
            left:
              value:
                simple: Core.ScriptResult.results._return_value
              iscontext: true
            right:
              value:
                simple: 'True'
            ignorecase: true
        accessor: standard_output
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: .*name (.*) found.*
            unpack_matches: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 42d427fd-6d4a-4b70-8b1a-35c76fdd8d45
  type: action
  description: commands.local.cmd.set.parent.incident.context
  action:
  connector:
  inputs:
    extend-context:
      simple: TerminatedProcessOnEndpoints=
    key:
      simple: TerminatedProcessPerEndpointsID
    value:
      complex:
        root: TerminatedProcessFromEndpoints
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 961146c8-6afd-4e75-8de9-d6a3171cf051
  type: action
  description: Initiate a new endpoint script execution of shell commands.
  action:
  connector:
  inputs:
    commands:
      simple: taskkill /F /PID ${ProcessID}
    endpoint_ids:
      complex:
        root: inputs.EndpointID
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 98faa8b1-1539-4e59-8274-c8434226eff7
  type: action
  description: Retrieve the results of a script execution action.
  action:
  connector:
  inputs:
    action_id:
      complex:
        root: Core.ScriptRun
        accessor: action_id
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 1a42b9b2-db4a-4905-8dd5-4b47d18449fc
  type: condition
  description: Checks if the termination of the process was successful.
  action:
  connector:
  inputs: {}
  outputs:
  conditions:
  - if_: ''
    then: c7749af3-73ff-4422-87dd-e8caeb84c069
    else_:
  - if_: ''
    then: 800bc596-f674-43ff-84cf-91da9573954b
    else_:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 800bc596-f674-43ff-84cf-91da9573954b
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    extend-context:
      simple: TerminatedProcessFromEndpoints=
    ignore-outputs:
      simple: 'true'
    key:
      complex:
        root: inputs.EndpointID
    value:
      complex:
        root: Core.ScriptResult.results
        filters:
        - - operator: isEqualString
            left:
              value:
                simple: Core.ScriptResult.results._return_value
              iscontext: true
            right:
              value:
                simple: 'True'
            ignorecase: true
        accessor: standard_output
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: .*name (.*) found.*
            unpack_matches: {}
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 0056cbe7-0eda-4bea-832f-9438e1f45936
  type: action
  description: commands.local.cmd.set.parent.incident.context
  action:
  connector:
  inputs:
    extend-context:
      simple: TerminatedProcessOnEndpoints=
    key:
      simple: TerminatedProcessPerEndpointsID
    value:
      complex:
        root: TerminatedProcessFromEndpoints
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: c7749af3-73ff-4422-87dd-e8caeb84c069
  type: action
  description: Prints an error entry with a given message
  action: PrintErrorEntry
  connector:
  inputs:
    message:
      simple: The process termination has failed.
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 4e7794f3-70a6-4941-8e9e-65ef20777dca
  type: action
  description: Prints an error entry with a given message
  action: PrintErrorEntry
  connector:
  inputs:
    message:
      simple: The process termination has failed.
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: e5475bb4-564f-4364-892b-12b130016b7a
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    key:
      simple: ProcessID
    value:
      complex:
        root: inputs.ProcessID
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: PID\":\"(\d+?)\"
            unpack_matches: {}
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: inputs.ProcessID
              iscontext: true
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
- id: 77d2329d-39ac-4e97-8490-b759589f91ad
  type: action
  description: Set a value in context under the key you entered.
  action: Set
  connector:
  inputs:
    key:
      simple: FilePath
    value:
      complex:
        root: inputs.FilePath
        transformers:
        - operator: RegexExtractAll
          args:
            error_if_no_match: {}
            ignore_case: {}
            multi_line: {}
            period_matches_newline: {}
            regex:
              value:
                simple: Path\":\"(.+?)\"
            unpack_matches: {}
        - operator: SetIfEmpty
          args:
            applyIfEmpty: {}
            defaultValue:
              value:
                simple: inputs.FilePath
              iscontext: true
  outputs:
  conditions:
  subplaybooks:
  parallel:
  instructions:
  timeout:
  escalation:
  runtime:
  script_content:
  task_definition:
inputs:
outputs:
metadata:
  vendor_mappings: {}
